import rhinoscriptsyntax as rs
import Eto.Drawing as drawing
import Eto.Forms as forms

class RectangularSurfaceGenerator(forms.Dialog[bool]):
    def __init__(self):
        self.Title = "Rectangular Surface Generator"
        self.Padding = drawing.Padding(10)
        
        self.InitializeComponents()
        
    def InitializeComponents(self):
        # Create a grid layout
        layout = forms.TableLayout()
        
        # Textbox inputs for length (Lx) and width (Ly)
        self.length_input = forms.TextBox()
        self.width_input = forms.TextBox()
        
        # Textbox input for X, Y, and Z location
        self.x_input = forms.TextBox()
        self.y_input = forms.TextBox()
        self.z_input = forms.TextBox()
        
        # Button to generate the surface
        generate_button = forms.Button(Text="Generate Surface")
        generate_button.Click += self.GenerateSurface
        
        # Add UI elements to the layout
        layout.Add(forms.Label(Text="Length (Lx):"))
        layout.Add(self.length_input)
        
        layout.Add(forms.Label(Text="Width (Ly):"))
        layout.Add(self.width_input)
        
        layout.Add(forms.Label(Text="X:"))
        layout.Add(self.x_input)
        
        layout.Add(forms.Label(Text="Y:"))
        layout.Add(self.y_input)
        
        layout.Add(forms.Label(Text="Z:"))
        layout.Add(self.z_input)
        
        layout.Add(generate_button, colspan=2)
        
        self.Content = layout
    
    def GenerateSurface(self, sender, e):
        # Get user input values
        length = float(self.length_input.Text)
        width = float(self.width_input.Text)
        x = float(self.x_input.Text)
        y = float(self.y_input.Text)
        z = float(self.z_input.Text)
        
        # Calculate corner points for the rectangular surface
        corner1 = (x - length / 2, y - width / 2, z)
        corner2 = (x + length / 2, y - width / 2, z)
        corner3 = (x + length / 2, y + width / 2, z)
        corner4 = (x - length / 2, y + width / 2, z)
        
        # Create the surface in Rhino
        surface = rs.AddSrfPt([corner1, corner2, corner3, corner4])
        
        if surface:
            forms.MessageBox.Show("Rectangular surface created successfully.", "Success")
            self.Close(True)
        else:
            forms.MessageBox.Show("Failed to create rectangular surface.", "Error")
    
def Main():
    dialog = RectangularSurfaceGenerator()
    result = dialog.ShowModal(RhinoEtoApp.MainWindow)
    dialog.Dispose()
    
if __name__ == "__main__":
    Main()
